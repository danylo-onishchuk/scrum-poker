{"version":3,"sources":["components/GameButtons/GameButtons.tsx","components/Login/Login.tsx","components/wsEvents.ts","components/Table/Table.tsx","components/VoteForm/VoteForm.tsx","App.tsx","index.tsx"],"names":["GameButtons","props","startClick","finishClick","className","type","onClick","Login","loginClick","onSubmit","name","id","WSEvents","BasicTable","clients","opacity","map","client","style","points","ready","VoteForm","voteClick","point","value","W3CWebSocket","App","useState","setClients","pointsOpacity","setPointsOpacity","useEffect","onopen","send","OpenConnection","onmessage","message","serverData","JSON","parse","data","event","shift","preventDefault","target","ChoosedCard","StartVote","FinishVote","ReactDOM","render","document","getElementById"],"mappings":"yNAAO,SAASA,EAAYC,GAC1B,IAAQC,EAA4BD,EAA5BC,WAAYC,EAAgBF,EAAhBE,YAEpB,OACE,sBAAKC,UAAU,eAAf,UACE,wBACEC,KAAK,SACLC,QAASJ,EAFX,wBAMA,wBACEG,KAAK,SACLC,QAASH,EAFX,4BCXC,SAASI,EAAMN,GACpB,IAAQO,EAAeP,EAAfO,WAER,OACE,qBAAKJ,UAAU,eAAf,SACE,uBAAMK,SAAUD,EAAhB,UACE,uBAAOH,KAAK,OAAOK,KAAK,OAAOC,GAAG,SAClC,wBACEN,KAAK,SADP,wB,UCPUO,ECSLC,EAAwB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC/C,OACE,qBAAKX,UAAU,eAAf,SACGU,EAAQE,KAAI,SAAAC,GAAM,OACjB,sBAAqBb,UAAU,iBAA/B,UACE,8BACGa,EAAOP,OAEV,qBAAKQ,MAAO,CAAEH,WAAd,SACGE,EAAOE,QAAU,IAEnBF,EAAOG,OACN,oDARMH,EAAON,UCblB,SAASU,EAASpB,GACvB,IAAQqB,EAAcrB,EAAdqB,UAIR,OACE,qBAAKlB,UAAU,eAAf,SACE,uBAAMK,SAAUa,EAAhB,UACE,wBACEZ,KAAK,SACLC,GAAG,SAFL,SALS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IASfK,KAAI,SAAAO,GAAK,OACf,wBAAQC,MAAOD,EAAf,SAAuBA,SAG3B,wBACElB,KAAK,SADP,wB,SFhBUO,K,gCAAAA,E,cAAAA,E,sBAAAA,E,wBAAAA,E,2BAAAA,M,KGQlB,IAAMK,EAAS,IAAIQ,eAAa,uBAEzB,SAASC,IACd,MAA8BC,mBAAS,IAAvC,mBAAOb,EAAP,KAAgBc,EAAhB,KACA,EAA0CD,mBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACRd,EAAOe,OAAS,WACdf,EAAOgB,KAAK,CAACrB,EAASsB,eAAgB,UAGxCjB,EAAOkB,UAAY,SAACC,GAClB,IAAMC,EAAaC,KAAKC,MAAMH,EAAQI,MAC/BC,EAAP,YAAgBJ,EAAhB,MAIA,OAFAA,EAAWK,QAEHD,GACN,IAAK,iBAIL,IAAK,kBAIL,IAAK,wBACHb,EAAWS,GACX,MAEF,IAAK,sBACHP,EAAiB,GACjBF,EAAWS,GACX,MACF,IAAK,uBACHP,EAAiB,GACjBF,EAAWS,OAOhB,IA0BH,OACE,sBAAKjC,UAAU,cAAf,UACE,cAACG,EAAD,CAAOC,WA1BQ,SAACiC,GAClBA,EAAME,iBAEN,IAAMjC,EAAO+B,EAAMG,OAAOlC,KAAKc,MAE/BP,EAAOgB,KAAK,CAACrB,EAASL,MAAOG,OAsB3B,cAACW,EAAD,CAAUC,UAnBI,SAACmB,GACjBA,EAAME,iBAEN,IAAMxB,EAASsB,EAAMG,OAAOzB,OAAOK,MAEnCP,EAAOgB,KAAK,CAACrB,EAASiC,YAAa1B,OAejC,cAACnB,EAAD,CACEE,WAba,WACjBe,EAAOgB,KAAK,CAACrB,EAASkC,UAAW,eAa7B3C,YAVc,WAClBc,EAAOgB,KAAK,CAACrB,EAASmC,WAAY,kBAWhC,cAAC,EAAD,CAAYjC,QAASA,EAASC,QAASc,OClF7CmB,IAASC,OACP,cAACvB,EAAD,IACAwB,SAASC,eAAe,W","file":"static/js/main.fff40266.chunk.js","sourcesContent":["export function GameButtons(props: any) {\n  const { startClick, finishClick } = props;\n\n  return (\n    <div className=\"loginWrapper\">\n      <button\n        type=\"button\"\n        onClick={startClick}\n      >\n        Start Game\n      </button>\n      <button\n        type=\"button\"\n        onClick={finishClick}\n      >\n        Finish Game\n      </button>\n    </div>\n  );\n}\n","export function Login(props: any) {\n  const { loginClick } = props;\n\n  return (\n    <div className=\"loginWrapper\">\n      <form onSubmit={loginClick}>\n        <input type=\"text\" name=\"name\" id=\"name\" />\n        <button\n          type=\"submit\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n","export const enum WSEvents {\n  OpenConnection = 'openConnection',\n  Login = 'login',\n  StartVote = 'startVote',\n  FinishVote = 'finishVote',\n  ChoosedCard = 'choosedCard',\n}\n","import { FC } from 'react';\nimport { Client } from '../types';\nimport './Table.css';\n\ninterface Props {\n  clients: Client[];\n  opacity: number;\n}\n\nexport const BasicTable: FC<Props> = ({ clients, opacity }) => {\n  return (\n    <div className=\"tableWrapper\">\n      {clients.map(client => (\n        <div key={client.id} className=\"clientsWrapper\">\n          <div>\n            {client.name}\n          </div>\n          <div style={{ opacity }}>\n            {client.points || 0}\n          </div>\n          {client.ready && (\n            <div>I choosed card!</div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","export function VoteForm(props: any) {\n  const { voteClick } = props;\n\n  const points = [1, 2, 3, 5, 8, 13];\n\n  return (\n    <div className=\"loginWrapper\">\n      <form onSubmit={voteClick}>\n        <select\n          name=\"points\"\n          id=\"points\"\n        >\n          {points.map(point => (\n            <option value={point}>{point}</option>\n          ))}\n        </select>\n        <button\n          type=\"submit\"\n        >\n          Vote\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { GameButtons } from './components/GameButtons/GameButtons';\nimport { Login } from './components/Login/Login';\nimport { BasicTable } from './components/Table/Table';\nimport { VoteForm } from './components/VoteForm/VoteForm';\nimport { WSEvents } from './components/wsEvents';\n\nconst client = new W3CWebSocket('ws://localhost:9000');\n\nexport function App() {\n  const [clients, setClients] = useState([]);\n  const [pointsOpacity, setPointsOpacity] = useState(1);\n\n  useEffect(() => {\n    client.onopen = () => {\n      client.send([WSEvents.OpenConnection, 'open']);\n    };\n\n    client.onmessage = (message: any) => {\n      const serverData = JSON.parse(message.data);\n      const [event] = serverData;\n\n      serverData.shift();\n\n      switch (event) {\n        case 'openFromServer':\n          setClients(serverData);\n          break;\n\n        case 'loginFromServer':\n          setClients(serverData);\n          break;\n\n        case 'choosedCardFromServer':\n          setClients(serverData);\n          break;\n\n        case 'startVoteFromServer':\n          setPointsOpacity(0);\n          setClients(serverData);\n          break;\n        case 'finishVoteFromServer':\n          setPointsOpacity(1);\n          setClients(serverData);\n          break;\n\n        default:\n          break;\n      }\n    };\n  }, []);\n\n  const loginClick = (event: any) => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n\n    client.send([WSEvents.Login, name]);\n  };\n\n  const voteClick = (event: any) => {\n    event.preventDefault();\n\n    const points = event.target.points.value;\n\n    client.send([WSEvents.ChoosedCard, points]);\n  };\n\n  const startClick = () => {\n    client.send([WSEvents.StartVote, 'startVote']);\n  };\n\n  const finishClick = () => {\n    client.send([WSEvents.FinishVote, 'finishVote']);\n  };\n\n  return (\n    <div className=\"gameWrapper\">\n      <Login loginClick={loginClick} />\n      <VoteForm voteClick={voteClick} />\n      <GameButtons\n        startClick={startClick}\n        finishClick={finishClick}\n      />\n      <BasicTable clients={clients} opacity={pointsOpacity} />\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}